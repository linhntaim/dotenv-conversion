{"version":3,"sources":["../../src/classes/dotenv-conversion.js"],"names":["NUMBER_REGEX","DotEnvConversion","defaultOptions","methods","auto","value","vCased","toLowerCase","trim","bool","test","number","startsWith","raw","substr","array","json","includes","parseFloat","isNaN","split","map","v","replace","JSON","parse","e","specs","prevents","options","env","override","Object","assign","dotenvConfigOutput","setOptions","parsed","hasOwnProperty","name","convert","ignoreProcessEnv","environment","process","stringify","method"],"mappings":"kgCAAA,GAAMA,CAAAA,YAAY,CAAG,qCAArB,C,GAEqBC,CAAAA,gB,yBACjB,2BAAc,wCACV,KAAKC,cAAL,CAAsB,CAClBC,OAAO,CAAE,CACLC,IADK,eACAC,KADA,CACO,CACR,GAAI,CAACA,KAAL,CAAY,MAAOA,CAAAA,KAAP,CAEZ,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,WAAN,GAAoBC,IAApB,EAAf,CAEA,GAAIF,MAAM,GAAK,MAAf,CAAuB,CACnB,MAAO,eACV,CACD,GAAIA,MAAM,GAAK,MAAX,EAAqBA,MAAM,GAAK,OAAhC,EAA2CA,MAAM,GAAK,KAAtD,EAA+DA,MAAM,GAAK,IAA9E,CAAoF,CAChF,MAAO,MAAKG,IAAL,CAAUJ,KAAV,CACV,CACD,GAAIL,YAAY,CAACU,IAAb,CAAkBJ,MAAlB,CAAJ,CAA+B,CAC3B,MAAO,MAAKK,MAAL,CAAYN,KAAZ,CACV,CACD,GAAIC,MAAM,CAACM,UAAP,CAAkB,MAAlB,CAAJ,CAA+B,CAC3B,MAAO,MAAKC,GAAL,CAASR,KAAK,CAACS,MAAN,CAAa,CAAb,CAAT,CACV,CACD,GAAIR,MAAM,CAACM,UAAP,CAAkB,OAAlB,CAAJ,CAAgC,CAC5B,MAAO,MAAKH,IAAL,CAAUJ,KAAK,CAACS,MAAN,CAAa,CAAb,CAAV,CACV,CACD,GAAIR,MAAM,CAACM,UAAP,CAAkB,SAAlB,CAAJ,CAAkC,CAC9B,MAAO,MAAKD,MAAL,CAAYN,KAAK,CAACS,MAAN,CAAa,CAAb,CAAZ,CACV,CACD,GAAIR,MAAM,CAACM,UAAP,CAAkB,QAAlB,CAAJ,CAAiC,CAC7B,MAAO,MAAKG,KAAL,CAAWV,KAAK,CAACS,MAAN,CAAa,CAAb,CAAX,CACV,CACD,GAAIR,MAAM,CAACM,UAAP,CAAkB,OAAlB,CAAJ,CAAgC,CAC5B,MAAO,MAAKI,IAAL,CAAUX,KAAK,CAACS,MAAN,CAAa,CAAb,CAAV,CACV,CACD,MAAO,MAAKE,IAAL,CAAUX,KAAV,CACV,CA/BI,CAgCLQ,GAhCK,cAgCDR,KAhCC,CAgCM,CACP,MAAOA,CAAAA,KACV,CAlCI,wBAmCE,CACH,MAAO,EACV,CArCI,CAsCLI,IAtCK,eAsCAJ,KAtCA,CAsCO,CACR,GAAI,CAACA,KAAL,CAAY,MAAO,MAAP,CACZA,KAAK,CAAGA,KAAK,CAACE,WAAN,GAAoBC,IAApB,EAAR,CACA,MAAO,CAAC,CAAC,EAAD,CAAK,OAAL,CAAc,KAAd,CAAqB,IAArB,CAA2B,KAA3B,CAAkC,MAAlC,CAA0C,MAA1C,CAAkD,WAAlD,EAA+DS,QAA/D,CAAwEZ,KAAxE,CAAD,GACC,CAACL,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAD,EAA6Ba,UAAU,CAACb,KAAD,CAAV,GAAsB,CADpD,CAEV,CA3CI,CA4CLM,MA5CK,iBA4CEN,KA5CF,CA4CS,CACV,GAAI,CAACA,KAAL,CAAY,MAAO,EAAP,CACZA,KAAK,CAAGa,UAAU,CAACb,KAAD,CAAlB,CACA,MAAOc,CAAAA,KAAK,CAACd,KAAD,CAAL,CAAe,CAAf,CAAmBA,KAC7B,CAhDI,CAiDLU,KAjDK,gBAiDCV,KAjDD,CAiDQ,CACT,GAAI,CAACA,KAAL,CAAY,MAAO,EAAP,CACZ,MAAOA,CAAAA,KAAK,CAACe,KAAN,CAAY,UAAZ,EAAwBC,GAAxB,CAA4B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,OAAF,CAAU,KAAV,CAAiB,GAAjB,CAAJ,CAA7B,CACV,CApDI,CAqDLP,IArDK,eAqDAX,KArDA,CAqDO,CACR,GAAI,CAACA,KAAL,CAAY,MAAO,EAAP,CACZ,GAAI,CACA,MAAOmB,CAAAA,IAAI,CAACC,KAAL,CAAWpB,KAAX,CACV,CAAC,MAAOqB,CAAP,CAAU,CACR,MAAOrB,CAAAA,KACV,CACJ,CA5DI,CADS,CA+DlBsB,KAAK,CAAE,EA/DW,CAgElBC,QAAQ,CAAE,EAhEQ,CAAtB,CAkEA,KAAKC,OAAL,CAAe,EAAf,CACA,KAAKC,GAAL,CAAW,EACd,C,4EAEwB,IAAdD,CAAAA,OAAc,2DAAJ,EAAI,CACrB,GAAME,CAAAA,QAAQ,CAAGF,OAAO,CAACE,QAAR,CAAmBF,OAAO,CAACE,QAA3B,CAAsC,IAAvD,CACA,MAAOF,CAAAA,OAAO,CAACE,QAAf,CAEA,KAAKF,OAAL,CAAeG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkB,KAAK/B,cAAvB,CAAuC2B,OAAvC,CAAf,CACA,GAAIE,QAAJ,CAAc,CACVC,MAAM,CAACC,MAAP,CAAc,KAAKJ,OAAL,CAAa1B,OAA3B,CAAoC4B,QAApC,CACH,CAED,MAAO,KACV,C,mCAE2C,IAAvCG,CAAAA,kBAAuC,2DAAlB,EAAkB,IAAdL,CAAAA,OAAc,2DAAJ,EAAI,CACxC,KAAKM,UAAL,CAAgBN,OAAhB,EAEA,KAAKC,GAAL,CAAW,EAAX,CAEA,GAAMM,CAAAA,MAAM,CAAGF,kBAAkB,CAACG,cAAnB,CAAkC,QAAlC,EAA8CH,kBAAkB,CAACE,MAAjE,CAA0E,EAAzF,CACA,IAAK,GAAME,CAAAA,IAAX,GAAmBF,CAAAA,MAAnB,CAA2B,CACvBA,MAAM,CAACE,IAAD,CAAN,CAAe,KAAKC,OAAL,CAAaD,IAAb,CAAmBF,MAAM,CAACE,IAAD,CAAzB,CAClB,CAED,GAAME,CAAAA,gBAAgB,CAAGN,kBAAkB,CAACG,cAAnB,CAAkC,kBAAlC,EAAwDH,kBAAkB,CAACM,gBAA3E,CAA8F,KAAvH,CACA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAACZ,GAA5B,CACA,GAAIU,gBAAJ,CAAsB,CAClB,IAAK,GAAMF,CAAAA,KAAX,GAAmBG,CAAAA,WAAnB,CAAgC,CAC5B,GAAMpC,CAAAA,KAAK,CAAG+B,MAAM,CAACC,cAAP,CAAsBC,KAAtB,EAA8BF,MAAM,CAACE,KAAD,CAApC,CAA6C,KAAKC,OAAL,CAAaD,KAAb,CAAmBG,WAAW,CAACH,KAAD,CAA9B,CAA3D,CACA,KAAKR,GAAL,CAASQ,KAAT,EAAiBjC,KACpB,CACJ,CALD,IAKO,CACH,IAAK,GAAMiC,CAAAA,MAAX,GAAmBG,CAAAA,WAAnB,CAAgC,CAC5B,GAAMpC,CAAAA,MAAK,CAAG+B,MAAM,CAACC,cAAP,CAAsBC,MAAtB,EAA8BF,MAAM,CAACE,MAAD,CAApC,CAA6C,KAAKC,OAAL,CAAaD,MAAb,CAAmBG,WAAW,CAACH,MAAD,CAA9B,CAA3D,CACA,KAAKR,GAAL,CAASQ,MAAT,EAAiBjC,MAAjB,CACAoC,WAAW,CAACH,MAAD,CAAX,CAAoB,CAAC,SAAD,CAAY,QAAZ,CAAsB,QAAtB,EAAgCrB,QAAhC,SAAgDZ,MAAhD,GAAyDA,MAAzD,CAAiEmB,IAAI,CAACmB,SAAL,CAAetC,MAAf,CACxF,CACJ,CAED,MAAO6B,CAAAA,kBACV,C,wCAEOI,I,CAAMjC,K,CAAO,CACjB,GAAI,KAAKwB,OAAL,CAAaD,QAAb,CAAsBX,QAAtB,CAA+BqB,IAA/B,CAAJ,CAA0C,CACtC,MAAOjC,CAAAA,KACV,CAED,GAAMuC,CAAAA,MAAM,CAAG,KAAKf,OAAL,CAAaF,KAAb,CAAmBU,cAAnB,CAAkCC,IAAlC,EAA0C,KAAKT,OAAL,CAAaF,KAAb,CAAmBW,IAAnB,CAA1C,CAAqE,MAApF,CACA,eAAeM,MAAf,GACI,IAAK,QAAL,CACI,GAAI,KAAKf,OAAL,CAAa1B,OAAb,CAAqBkC,cAArB,CAAoCO,MAApC,CAAJ,CAAiD,CAC7C,MAAO,MAAKf,OAAL,CAAa1B,OAAb,CAAqByC,MAArB,EAA6BvC,KAA7B,CACV,CACD,MAAOA,CAAAA,KAAP,CACJ,IAAK,UAAL,CACI,MAAOuC,CAAAA,MAAM,CAACvC,KAAD,CAAb,CACJ,QACI,MAAOA,CAAAA,KAAP,CATR,CAWH,C,uCAEmB,IAAbiC,CAAAA,IAAa,2DAAN,IAAM,CAChB,MAAOA,CAAAA,IAAI,CAAI,KAAKR,GAAL,CAASO,cAAT,CAAwBC,IAAxB,EAAgC,KAAKR,GAAL,CAASQ,IAAT,CAAhC,CAAiD,EAArD,CAA2D,KAAKR,GAC9E,C","sourcesContent":["const NUMBER_REGEX = /^(\\+|-)?\\d+(\\.\\d+)?(e(\\+|-)?\\d+)?$/i\r\n\r\nexport default class DotEnvConversion {\r\n    constructor() {\r\n        this.defaultOptions = {\r\n            methods: {\r\n                auto(value) {\r\n                    if (!value) return value\r\n\r\n                    const vCased = value.toLowerCase().trim()\r\n\r\n                    if (vCased === 'null') {\r\n                        return this.null()\r\n                    }\r\n                    if (vCased === 'true' || vCased === 'false' || vCased === 'yes' || vCased === 'no') {\r\n                        return this.bool(value)\r\n                    }\r\n                    if (NUMBER_REGEX.test(vCased)) {\r\n                        return this.number(value)\r\n                    }\r\n                    if (vCased.startsWith('raw:')) {\r\n                        return this.raw(value.substr(4))\r\n                    }\r\n                    if (vCased.startsWith('bool:')) {\r\n                        return this.bool(value.substr(5))\r\n                    }\r\n                    if (vCased.startsWith('number:')) {\r\n                        return this.number(value.substr(7))\r\n                    }\r\n                    if (vCased.startsWith('array:')) {\r\n                        return this.array(value.substr(6))\r\n                    }\r\n                    if (vCased.startsWith('json:')) {\r\n                        return this.json(value.substr(5))\r\n                    }\r\n                    return this.json(value)\r\n                },\r\n                raw(value) {\r\n                    return value\r\n                },\r\n                null() {\r\n                    return ''\r\n                },\r\n                bool(value) {\r\n                    if (!value) return false\r\n                    value = value.toLowerCase().trim()\r\n                    return !['', 'false', 'nan', 'no', 'not', 'none', 'null', 'undefined'].includes(value)\r\n                        && (!NUMBER_REGEX.test(value) || parseFloat(value) !== 0)\r\n                },\r\n                number(value) {\r\n                    if (!value) return 0\r\n                    value = parseFloat(value)\r\n                    return isNaN(value) ? 0 : value\r\n                },\r\n                array(value) {\r\n                    if (!value) return []\r\n                    return value.split(/(?<!\\\\),/).map(v => v.replace(/\\\\,/, ','))\r\n                },\r\n                json(value) {\r\n                    if (!value) return {}\r\n                    try {\r\n                        return JSON.parse(value)\r\n                    } catch (e) {\r\n                        return value\r\n                    }\r\n                },\r\n            },\r\n            specs: {},\r\n            prevents: [],\r\n        }\r\n        this.options = {}\r\n        this.env = {}\r\n    }\r\n\r\n    setOptions(options = {}) {\r\n        const override = options.override ? options.override : null\r\n        delete options.override\r\n\r\n        this.options = Object.assign({}, this.defaultOptions, options)\r\n        if (override) {\r\n            Object.assign(this.options.methods, override)\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    make(dotenvConfigOutput = {}, options = {}) {\r\n        this.setOptions(options)\r\n\r\n        this.env = {}\r\n\r\n        const parsed = dotenvConfigOutput.hasOwnProperty('parsed') ? dotenvConfigOutput.parsed : {}\r\n        for (const name in parsed) {\r\n            parsed[name] = this.convert(name, parsed[name])\r\n        }\r\n\r\n        const ignoreProcessEnv = dotenvConfigOutput.hasOwnProperty('ignoreProcessEnv') ? dotenvConfigOutput.ignoreProcessEnv : false\r\n        const environment = process.env\r\n        if (ignoreProcessEnv) {\r\n            for (const name in environment) {\r\n                const value = parsed.hasOwnProperty(name) ? parsed[name] : this.convert(name, environment[name])\r\n                this.env[name] = value\r\n            }\r\n        } else {\r\n            for (const name in environment) {\r\n                const value = parsed.hasOwnProperty(name) ? parsed[name] : this.convert(name, environment[name])\r\n                this.env[name] = value\r\n                environment[name] = ['boolean', 'number', 'string'].includes(typeof value) ? value : JSON.stringify(value)\r\n            }\r\n        }\r\n\r\n        return dotenvConfigOutput\r\n    }\r\n\r\n    convert(name, value) {\r\n        if (this.options.prevents.includes(name)) {\r\n            return value\r\n        }\r\n\r\n        const method = this.options.specs.hasOwnProperty(name) ? this.options.specs[name] : 'auto'\r\n        switch (typeof method) {\r\n            case 'string':\r\n                if (this.options.methods.hasOwnProperty(method)) {\r\n                    return this.options.methods[method](value)\r\n                }\r\n                return value\r\n            case 'function':\r\n                return method(value)\r\n            default:\r\n                return value\r\n        }\r\n    }\r\n\r\n    getenv(name = null) {\r\n        return name ? (this.env.hasOwnProperty(name) ? this.env[name] : '') : this.env\r\n    }\r\n}"],"file":"dotenv-conversion.js"}