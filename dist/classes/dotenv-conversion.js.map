{"version":3,"file":"dotenv-conversion.js","names":["NUMBER_REGEX","DotEnvConversion","defaultOptions","methods","auto","value","vCased","toLowerCase","trim","null","includes","bool","test","number","startsWith","raw","substr","array","json","parseFloat","isNaN","values","c","split","map","v","forEach","vs","i","push","length","JSON","parse","e","specs","prevents","options","env","override","Object","assign","dotenvConfigOutput","setOptions","parsed","name","convert","ignoreProcessEnv","environment","process","stringify","method","def"],"sources":["../../src/classes/dotenv-conversion.js"],"sourcesContent":["const NUMBER_REGEX = /^(\\+|-)?\\d+(\\.\\d+)?(e(\\+|-)?\\d+)?$/i\r\n\r\nexport default class DotEnvConversion\r\n{\r\n    constructor() {\r\n        this.defaultOptions = {\r\n            methods: {\r\n                auto(value) {\r\n                    if (!value) {\r\n                        return value\r\n                    }\r\n\r\n                    const vCased = value.toLowerCase().trim()\r\n                    switch (true) {\r\n                        case vCased === 'null':\r\n                            return this.null()\r\n                        case ['true', 'false', 'yes', 'no'].includes(vCased):\r\n                            return this.bool(value)\r\n                        case NUMBER_REGEX.test(vCased):\r\n                            return this.number(value)\r\n                        case vCased.startsWith('raw:'):\r\n                            return this.raw(value.substr(4))\r\n                        case vCased.startsWith('bool:'):\r\n                            return this.bool(value.substr(5))\r\n                        case vCased.startsWith('number:'):\r\n                            return this.number(value.substr(7))\r\n                        case vCased.startsWith('array:'):\r\n                            return this.array(value.substr(6))\r\n                        case vCased.startsWith('json:'):\r\n                            return this.json(value.substr(5))\r\n                        default:\r\n                            return this.json(value)\r\n                    }\r\n                },\r\n                raw(value) {\r\n                    return value\r\n                },\r\n                null() {\r\n                    return ''\r\n                },\r\n                bool(value) {\r\n                    if (!value) {\r\n                        return false\r\n                    }\r\n                    value = value.toLowerCase().trim()\r\n                    return !['', 'false', 'nan', 'no', 'not', 'none', 'null', 'undefined'].includes(value)\r\n                        && (!NUMBER_REGEX.test(value) || parseFloat(value) !== 0)\r\n                },\r\n                number(value) {\r\n                    if (!value) {\r\n                        return 0\r\n                    }\r\n                    value = parseFloat(value)\r\n                    return isNaN(value) ? 0 : value\r\n                },\r\n                array(value) {\r\n                    if (!value) {\r\n                        return []\r\n                    }\r\n                    return (() => {\r\n                        const values = []\r\n                        let c = 0\r\n                        value.split('\\\\,')\r\n                            .map(v => v.split(','))\r\n                            .forEach(vs => {\r\n                                vs.forEach((v, i) => {\r\n                                    i ? values.push(v) : (c && !i ? values[values.length - 1] += ',' + v : values.push(v))\r\n                                })\r\n                                c = values.length\r\n                            })\r\n                        return values\r\n                    })()\r\n                },\r\n                json(value) {\r\n                    if (!value) {\r\n                        return {}\r\n                    }\r\n                    try {\r\n                        return JSON.parse(value)\r\n                    }\r\n                    catch (e) {\r\n                        return value\r\n                    }\r\n                },\r\n            },\r\n            specs: {},\r\n            prevents: [],\r\n        }\r\n        this.options = {}\r\n        this.env = {}\r\n    }\r\n\r\n    setOptions(options = {}) {\r\n        const override = options.override ? options.override : null\r\n        delete options.override\r\n\r\n        this.options = Object.assign({}, this.defaultOptions, options)\r\n        if (override) {\r\n            Object.assign(this.options.methods, override)\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    make(dotenvConfigOutput = {}, options = {}) {\r\n        this.setOptions(options)\r\n\r\n        this.env = {}\r\n\r\n        const parsed = 'parsed' in dotenvConfigOutput ? dotenvConfigOutput.parsed : {}\r\n        for (const name in parsed) {\r\n            parsed[name] = this.convert(name, parsed[name])\r\n        }\r\n\r\n        const ignoreProcessEnv = 'ignoreProcessEnv' in dotenvConfigOutput ? dotenvConfigOutput.ignoreProcessEnv : false\r\n        const environment = process.env\r\n        if (ignoreProcessEnv) {\r\n            for (const name in environment) {\r\n                this.env[name] = name in parsed ? parsed[name] : this.convert(name, environment[name])\r\n            }\r\n        }\r\n        else {\r\n            for (const name in environment) {\r\n                const value = name in parsed ? parsed[name] : this.convert(name, environment[name])\r\n                this.env[name] = value\r\n                environment[name] = ['boolean', 'number', 'string'].includes(typeof value) ? value : JSON.stringify(value)\r\n            }\r\n        }\r\n\r\n        return dotenvConfigOutput\r\n    }\r\n\r\n    convert(name, value) {\r\n        if (this.options.prevents.includes(name)) {\r\n            return value\r\n        }\r\n\r\n        const method = name in this.options.specs ? this.options.specs[name] : 'auto'\r\n        switch (typeof method) {\r\n            case 'string':\r\n                if (method in this.options.methods) {\r\n                    return this.options.methods[method](value)\r\n                }\r\n                return value\r\n            case 'function':\r\n                return method(value)\r\n            default:\r\n                return value\r\n        }\r\n    }\r\n\r\n    getenv(name = null, def = null) {\r\n        return name ? (name in this.env ? this.env[name] : def) : this.env\r\n    }\r\n}\r\n"],"mappings":"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"}