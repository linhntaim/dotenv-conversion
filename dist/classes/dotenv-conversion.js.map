{"version":3,"file":"dotenv-conversion.js","names":["NUMBER_REGEX","DotEnvConversion","exports","_classCallCheck","defaultOptions","methods","auto","value","vCased","toLowerCase","trim","includes","bool","test","number","startsWith","raw","substring","array","json","_null","parseFloat","isNaN","values","c","split","map","v","forEach","vs","i","push","length","JSON","parse","e","specs","prevents","options","env","_createClass","key","setOptions","arguments","undefined","override","Object","assign","make","dotenvConfigOutput","parsed","name","convert","ignoreProcessEnv","environment","process","_typeof","stringify","method","getenv","def"],"sources":["../../src/classes/dotenv-conversion.js"],"sourcesContent":["const NUMBER_REGEX = /^[+-]?\\d+(\\.\\d+)?(e[+-]?\\d+)?$/i\r\n\r\nexport default class DotEnvConversion\r\n{\r\n    constructor() {\r\n        this.defaultOptions = {\r\n            methods: {\r\n                auto(value) {\r\n                    if (!value) {\r\n                        return value\r\n                    }\r\n\r\n                    const vCased = value.toLowerCase().trim()\r\n                    switch (true) {\r\n                        case vCased === 'null':\r\n                            return this.null()\r\n                        case ['true', 'false', 'yes', 'no'].includes(vCased):\r\n                            return this.bool(value)\r\n                        case NUMBER_REGEX.test(vCased):\r\n                            return this.number(value)\r\n                        case vCased.startsWith('raw:'):\r\n                            return this.raw(value.substring(4))\r\n                        case vCased.startsWith('bool:'):\r\n                            return this.bool(value.substring(5))\r\n                        case vCased.startsWith('number:'):\r\n                            return this.number(value.substring(7))\r\n                        case vCased.startsWith('array:'):\r\n                            return this.array(value.substring(6))\r\n                        case vCased.startsWith('json:'):\r\n                            return this.json(value.substring(5))\r\n                        default:\r\n                            return this.json(value)\r\n                    }\r\n                },\r\n                raw(value) {\r\n                    return value\r\n                },\r\n                null() {\r\n                    return ''\r\n                },\r\n                bool(value) {\r\n                    if (!value) {\r\n                        return false\r\n                    }\r\n                    value = value.toLowerCase().trim()\r\n                    return !['', 'false', 'nan', 'no', 'not', 'none', 'null', 'undefined'].includes(value)\r\n                        && (!NUMBER_REGEX.test(value) || parseFloat(value) !== 0)\r\n                },\r\n                number(value) {\r\n                    if (!value) {\r\n                        return 0\r\n                    }\r\n                    value = parseFloat(value)\r\n                    return isNaN(value) ? 0 : value\r\n                },\r\n                array(value) {\r\n                    if (!value) {\r\n                        return []\r\n                    }\r\n                    return (() => {\r\n                        const values = []\r\n                        let c = 0\r\n                        value.split('\\\\,')\r\n                            .map(v => v.split(','))\r\n                            .forEach(vs => {\r\n                                vs.forEach((v, i) => {\r\n                                    i ? values.push(v) : (c && !i ? values[values.length - 1] += ',' + v : values.push(v))\r\n                                })\r\n                                c = values.length\r\n                            })\r\n                        return values\r\n                    })()\r\n                },\r\n                json(value) {\r\n                    if (!value) {\r\n                        return {}\r\n                    }\r\n                    try {\r\n                        return JSON.parse(value)\r\n                    }\r\n                    catch (e) {\r\n                        return value\r\n                    }\r\n                },\r\n            },\r\n            specs: {},\r\n            prevents: [],\r\n        }\r\n        this.options = {}\r\n        this.env = {}\r\n    }\r\n\r\n    setOptions(options = {}) {\r\n        const override = options.override ? options.override : null\r\n        delete options.override\r\n\r\n        this.options = Object.assign({}, this.defaultOptions, options)\r\n        if (override) {\r\n            Object.assign(this.options.methods, override)\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    make(dotenvConfigOutput = {}, options = {}) {\r\n        this.setOptions(options)\r\n\r\n        this.env = {}\r\n\r\n        const parsed = 'parsed' in dotenvConfigOutput ? dotenvConfigOutput.parsed : {}\r\n        for (const name in parsed) {\r\n            parsed[name] = this.convert(name, parsed[name])\r\n        }\r\n\r\n        const ignoreProcessEnv = 'ignoreProcessEnv' in dotenvConfigOutput ? dotenvConfigOutput.ignoreProcessEnv : false\r\n        const environment = process.env\r\n        if (ignoreProcessEnv) {\r\n            for (const name in environment) {\r\n                this.env[name] = name in parsed ? parsed[name] : this.convert(name, environment[name])\r\n            }\r\n        }\r\n        else {\r\n            for (const name in environment) {\r\n                const value = name in parsed ? parsed[name] : this.convert(name, environment[name])\r\n                this.env[name] = value\r\n                environment[name] = ['boolean', 'number', 'string'].includes(typeof value) ? value : JSON.stringify(value)\r\n            }\r\n        }\r\n\r\n        return dotenvConfigOutput\r\n    }\r\n\r\n    convert(name, value) {\r\n        if (this.options.prevents.includes(name)) {\r\n            return value\r\n        }\r\n\r\n        const method = name in this.options.specs ? this.options.specs[name] : 'auto'\r\n        switch (typeof method) {\r\n            case 'string':\r\n                if (method in this.options.methods) {\r\n                    return this.options.methods[method](value)\r\n                }\r\n                return value\r\n            case 'function':\r\n                return method(value)\r\n            default:\r\n                return value\r\n        }\r\n    }\r\n\r\n    getenv(name = null, def = null) {\r\n        return name ? (name in this.env ? this.env[name] : def) : this.env\r\n    }\r\n}\r\n"],"mappings":"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"}