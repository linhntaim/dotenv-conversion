{"version":3,"file":"index.js","names":["_envUtils","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","INTEGER_REGEX","defaultConfig","parsed","ignoreProcessEnv","specs","prevents","methods","auto","value","startsWith","substring","envUtils","restoreValue","availableMethod","Object","keys","find","method","concat","length","bool","trim","includes","isNumber","isBigInt","Number","BigInt","slice","NUMBER_REGEX","test","BIGINT_REGEX","num","number","parseFloat","isNaN","big","bigint","isInteger","parseInt","raw","symbol","SYMBOL_REGEX","e","arr","array","ARRAY_REGEX","JSON","parse","json","JSON_REGEX","mergeConfig","config","arguments","undefined","mergingConfig","update","name","type","assign","interpolate","convert","environment","process","env","configKey","hasOwnProperty","call","processKey","flattenValue","_default","exports"],"sources":["../src/index.js"],"sourcesContent":["import envUtils from './env-utils'\r\n\r\nconst INTEGER_REGEX = /^[+-]?\\d+$/\r\n\r\nfunction defaultConfig() {\r\n    return {\r\n        parsed: {},\r\n        ignoreProcessEnv: false,\r\n        specs: {},\r\n        prevents: [],\r\n        methods: {\r\n            auto(value) {\r\n                if (value.startsWith('auto:')) {\r\n                    value = value.substring(5)\r\n                }\r\n                value = envUtils.restoreValue(value)\r\n                if (typeof value === 'string') {\r\n                    const availableMethod = Object.keys(this).find(method => value.startsWith(`${method}:`))\r\n                    if (availableMethod) {\r\n                        value = this[availableMethod](value.substring(availableMethod.length + 1))\r\n                    }\r\n                }\r\n                return value\r\n            },\r\n            bool(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return false\r\n                }\r\n                return !['false', 'False', 'FALSE',\r\n                        'no', 'No', 'NO',\r\n                        'null', 'Null', 'NULL',\r\n                        'undefined', 'UNDEFINED',\r\n                        'NaN',\r\n                        'not', 'Not', 'NOT',\r\n                        'none', 'None', 'NONE']\r\n                        .includes(value)\r\n                    && ((isNumber, isBigInt) => {\r\n                        return (!isNumber && !isBigInt)\r\n                            || (isNumber && Number(value) !== 0)\r\n                            || (isBigInt && BigInt(value.slice(0, -1)) !== 0n)\r\n                    })(envUtils.NUMBER_REGEX.test(value), envUtils.BIGINT_REGEX.test(value))\r\n            },\r\n            num(value) {\r\n                return this.number(value)\r\n            },\r\n            number(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return 0\r\n                }\r\n                value = parseFloat(value)\r\n                return Number.isNaN(value) ? 0 : value\r\n            },\r\n            big(value) {\r\n                return this.bigint(value)\r\n            },\r\n            bigint(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return 0n\r\n                }\r\n                if (INTEGER_REGEX.test(value)) {\r\n                    return BigInt(value)\r\n                }\r\n                if (envUtils.BIGINT_REGEX.test(value)) {\r\n                    return BigInt(value.slice(0, -1))\r\n                }\r\n                value = parseFloat(value)\r\n                switch (true) {\r\n                    case Number.isNaN(value):\r\n                        return 0n\r\n                    case Number.isInteger(value):\r\n                        return BigInt(value)\r\n                    default:\r\n                        return BigInt(parseInt(value))\r\n                }\r\n            },\r\n            raw(value) {\r\n                return value\r\n            },\r\n            symbol(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return Symbol()\r\n                }\r\n                const symbol = envUtils.SYMBOL_REGEX.test(value) ? value.slice(7, -1) : value\r\n                try {\r\n                    return Symbol(symbol)\r\n                }\r\n                catch (e) {\r\n                    return value\r\n                }\r\n            },\r\n            arr(value) {\r\n                return this.array(value)\r\n            },\r\n            array(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return []\r\n                }\r\n                const arr = envUtils.ARRAY_REGEX.test(value) ? value : `[${value}]`\r\n                try {\r\n                    return JSON.parse(arr)\r\n                }\r\n                catch (e) {\r\n                    return [value]\r\n                }\r\n            },\r\n            obj(value) {\r\n                return this.json(value)\r\n            },\r\n            json(value) {\r\n                value = value.trim()\r\n                if (!value) {\r\n                    return {}\r\n                }\r\n                const json = envUtils.JSON_REGEX.test(value) ? value : `{${value}}`\r\n                try {\r\n                    return JSON.parse(json)\r\n                }\r\n                catch (e) {\r\n                    return value\r\n                }\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nfunction mergeConfig(config = {}) {\r\n    const mergingConfig = defaultConfig()\r\n    const update = (name, type = null) => {\r\n        if (name in config) {\r\n            switch (type) {\r\n                case 'merge':\r\n                    Object.assign(mergingConfig[name], config[name])\r\n                    break\r\n                default:\r\n                    mergingConfig[name] = config[name]\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    update('parsed')\r\n    update('ignoreProcessEnv')\r\n    update('specs')\r\n    update('prevents')\r\n    update('methods', 'merge')\r\n    return mergingConfig\r\n}\r\n\r\nfunction interpolate(name, value, config) {\r\n    if (config.prevents.includes(name)) {\r\n        return value\r\n    }\r\n\r\n    const method = name in config.specs ? config.specs[name] : 'auto'\r\n    switch (typeof method) {\r\n        case 'string':\r\n            if (method in config.methods) {\r\n                return config.methods[method](value)\r\n            }\r\n            return value\r\n        case 'function':\r\n            return method(value)\r\n        default:\r\n            return value\r\n    }\r\n}\r\n\r\nfunction convert(config = {}) {\r\n    config = mergeConfig(config)\r\n\r\n    const environment = config.ignoreProcessEnv ? {} : process.env\r\n\r\n    for (const configKey in config.parsed) {\r\n        const value = Object.prototype.hasOwnProperty.call(environment, configKey)\r\n            ? environment[configKey]\r\n            : config.parsed[configKey]\r\n\r\n        config.parsed[configKey] = interpolate(configKey, value, config)\r\n    }\r\n\r\n    for (const processKey in config.parsed) {\r\n        environment[processKey] = envUtils.flattenValue(config.parsed[processKey])\r\n    }\r\n\r\n    return config\r\n}\r\n\r\nexport default {convert}\r\n"],"mappings":"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"}